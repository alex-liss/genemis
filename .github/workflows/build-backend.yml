# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build Backend

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "architecture/**"
      - "design/**"
      - "frontend/**"
      - "database/**"
      - "infrastructure/**"
      - "README.md"
      - ".github/workflows/build-frontend.yml"
  pull_request:
    branches: ["master"]
    paths-ignore:
      - "architecture/**"
      - "design/**"
      - "frontend/**"
      - "database/**"
      - "infrastructure/**"
      - "README.md"
      - ".github/workflows/build-frontend.yml"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    services:
      docker:
        image: docker
        options: --privileged

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build
      run: ./gradlew clean build

    - name: Find and upload test reports
      if: failure()
      run: |
        find . -type d -path "*/build/reports/tests/test" -print0 | while IFS= read -r -d '' dir; do
          echo "Found test report directory: $dir"
          module=$(basename $(dirname $(dirname $(dirname $dir))))
          artifact_name="${module}-test-results"
          echo "Uploading $artifact_name from $dir"
          zip -r "${artifact_name}.zip" "$dir"
          gh actions upload-artifact --name "$artifact_name" --path "${artifact_name}.zip"
        done
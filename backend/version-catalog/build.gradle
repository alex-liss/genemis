import java.nio.file.Files

plugins {
    id 'version-catalog'
    id 'maven-publish'
}

group 'net.genemis'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyToml(type: Copy) {
    doLast {
        def directory = file("catalog")
        Files.createDirectories(directory.toPath())
    }
    from layout.buildDirectory.file("version-catalog/libs.versions.toml")
    into layout.projectDirectory.dir("catalog")
}

generateCatalogAsToml.finalizedBy copyToml

catalog {
    versionCatalog {

        library('projectlombok', 'org.projectlombok:lombok:1.18.28')
        library('projectreactor', 'io.projectreactor:reactor-test:3.5.9')

        library('opencsv', 'com.opencsv:opencsv:5.8')

        //logging
        version('log4j2', '2.21.1')
        library('log4j-core', 'org.apache.logging.log4j', 'log4j-core').versionRef('log4j2')
        library('log4j-api', 'org.apache.logging.log4j', 'log4j-api').versionRef('log4j2')
        library('log4j-slf4j-impl', 'org.apache.logging.log4j', 'log4j-slf4j-impl').versionRef('log4j2')
        bundle('log4j2', ['log4j-core', 'log4j-api', 'log4j-slf4j-impl'])

        // testing
        version('testcontainers', '1.19.3')
        library('testcontainers.core', 'org.testcontainers', 'testcontainers').versionRef('testcontainers')
        library('testcontainers.mongodb', 'org.testcontainers', 'mongodb').versionRef('testcontainers')
        bundle('testcontainers', ['testcontainers.core', 'testcontainers.mongodb'])
        library('mockito', 'org.mockito:mockito-junit-jupiter:5.8.0')

        // plugins
        plugin('springboot', 'org.springframework.boot').version('3.1.3')
        plugin('spring-dependency-management', 'io.spring.dependency-management').version('1.1.3')
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.versionCatalog
        }
    }
    repositories {
        mavenCentral()
    }

}